{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\AMAN MAURYA\\\\OneDrive\\\\Desktop\\\\now\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (storedToken) {\n        try {\n          // Verify token with backend\n          const response = await authAPI.getMe();\n          setToken(storedToken);\n          setUser(response.data.data.user);\n          localStorage.setItem('user', JSON.stringify(response.data.data.user));\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      } else if (storedUser) {\n        try {\n          const user = JSON.parse(storedUser);\n          setUser(user);\n        } catch (error) {\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = (token, userData) => {\n    setToken(token);\n    setUser(userData);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const isAuthenticated = () => {\n    return token && user;\n  };\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","initAuth","storedToken","localStorage","getItem","storedUser","response","getMe","data","setItem","JSON","stringify","error","removeItem","parse","login","userData","logout","isAuthenticated","hasRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/AMAN MAURYA/OneDrive/Desktop/now/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n\n      if (storedToken) {\n        try {\n          // Verify token with backend\n          const response = await authAPI.getMe();\n          setToken(storedToken);\n          setUser(response.data.data.user);\n          localStorage.setItem('user', JSON.stringify(response.data.data.user));\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      } else if (storedUser) {\n        try {\n          const user = JSON.parse(storedUser);\n          setUser(user);\n        } catch (error) {\n          localStorage.removeItem('user');\n        }\n      }\n      \n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = (token, userData) => {\n    setToken(token);\n    setUser(userData);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n\n  const isAuthenticated = () => {\n    return token && user;\n  };\n\n  const hasRole = (role) => {\n    return user && user.role === role;\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}