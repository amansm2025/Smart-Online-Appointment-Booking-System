{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\AMAN MAURYA\\\\OneDrive\\\\Desktop\\\\now\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { validateToken, getUserFromToken } from '../services/mockAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing token on app load\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && validateToken(storedToken)) {\n      setToken(storedToken);\n      if (storedUser) {\n        try {\n          setUser(JSON.parse(storedUser));\n        } catch (error) {\n          // If stored user is invalid, get from token\n          const userFromToken = getUserFromToken(storedToken);\n          if (userFromToken) {\n            setUser(userFromToken);\n            localStorage.setItem('user', JSON.stringify(userFromToken));\n          }\n        }\n      } else {\n        // Get user from token if no stored user\n        const userFromToken = getUserFromToken(storedToken);\n        if (userFromToken) {\n          setUser(userFromToken);\n          localStorage.setItem('user', JSON.stringify(userFromToken));\n        }\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, userData) => {\n    setToken(token);\n    setUser(userData);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const isAuthenticated = () => {\n    return token && validateToken(token) && user;\n  };\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","validateToken","getUserFromToken","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","error","userFromToken","setItem","stringify","login","userData","logout","removeItem","isAuthenticated","hasRole","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/AMAN MAURYA/OneDrive/Desktop/now/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { validateToken, getUserFromToken } from '../services/mockAuth';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing token on app load\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n\n    if (storedToken && validateToken(storedToken)) {\n      setToken(storedToken);\n      \n      if (storedUser) {\n        try {\n          setUser(JSON.parse(storedUser));\n        } catch (error) {\n          // If stored user is invalid, get from token\n          const userFromToken = getUserFromToken(storedToken);\n          if (userFromToken) {\n            setUser(userFromToken);\n            localStorage.setItem('user', JSON.stringify(userFromToken));\n          }\n        }\n      } else {\n        // Get user from token if no stored user\n        const userFromToken = getUserFromToken(storedToken);\n        if (userFromToken) {\n          setUser(userFromToken);\n          localStorage.setItem('user', JSON.stringify(userFromToken));\n        }\n      }\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = (token, userData) => {\n    setToken(token);\n    setUser(userData);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n\n  const isAuthenticated = () => {\n    return token && validateToken(token) && user;\n  };\n\n  const hasRole = (role) => {\n    return user && user.role === role;\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}